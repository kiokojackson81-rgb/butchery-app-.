name: smoke

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  smoke:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build app
        run: npm run build
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NEXT_TELEMETRY_DISABLED: 1
          WA_DRY_RUN: true
          CHATRACE_ENABLED: false

      - name: Start server
        run: |
          nohup npm run start > .next-start.log 2>&1 &
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NEXT_TELEMETRY_DISABLED: 1
          WA_DRY_RUN: true
          CHATRACE_ENABLED: false

      - name: Wait for server
        run: npx --yes wait-on http://localhost:3000 --timeout 60000

      - name: Run smoke tests
        run: npx vitest run tests/db_persistence.smoke.spec.ts --reporter=dot
        env:
          BASE_URL: http://localhost:3000
          NEXT_TELEMETRY_DISABLED: 1
name: Smoke test (DB-first persistence)

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  smoke:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Set BASE_URL env (default, with optional secret override)
        env:
          SMOKE_BASE_URL: ${{ secrets.SMOKE_BASE_URL }}
        run: |
          echo "BASE_URL=https://barakafresh.com" >> $GITHUB_ENV
          if [ -n "${SMOKE_BASE_URL}" ]; then
            echo "BASE_URL=${SMOKE_BASE_URL}" >> $GITHUB_ENV
          fi

      - name: Run smoke test against production
        run: npx vitest run tests/db_persistence.smoke.spec.ts --reporter=dot

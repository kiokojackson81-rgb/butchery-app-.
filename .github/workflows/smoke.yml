name: Smoke Tests

run-name: >-
  Smoke Tests â€” ${{ github.event_name }} on ${{ github.ref_name }} (run #${{ github.run_number }})

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  smoke:
    name: Vitest smoke suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Set common environment
        run: |
          echo "NEXT_TELEMETRY_DISABLED=1" >> $GITHUB_ENV
          echo "WA_DRY_RUN=true" >> $GITHUB_ENV
          echo "CHATRACE_ENABLED=false" >> $GITHUB_ENV
          # Provide a fallback for directUrl in Prisma to avoid P1012 when not provided
          if [ -n "${{ secrets.DATABASE_URL }}" ]; then
            echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> $GITHUB_ENV
          elif [ -n "${{ vars.DATABASE_URL }}" ]; then
            echo "DATABASE_URL=${{ vars.DATABASE_URL }}" >> $GITHUB_ENV
          fi

          # Prefer secret for unpooled; fallback to vars; lastly reuse pooled
          if [ -n "${{ secrets.DATABASE_URL_UNPOOLED }}" ]; then
            echo "DATABASE_URL_UNPOOLED=${{ secrets.DATABASE_URL_UNPOOLED }}" >> $GITHUB_ENV
          elif [ -n "${{ vars.DATABASE_URL_UNPOOLED }}" ]; then
            echo "DATABASE_URL_UNPOOLED=${{ vars.DATABASE_URL_UNPOOLED }}" >> $GITHUB_ENV
          elif [ -n "${{ secrets.DATABASE_URL }}" ]; then
            echo "DATABASE_URL_UNPOOLED=${{ secrets.DATABASE_URL }}" >> $GITHUB_ENV
          elif [ -n "${{ vars.DATABASE_URL }}" ]; then
            echo "DATABASE_URL_UNPOOLED=${{ vars.DATABASE_URL }}" >> $GITHUB_ENV
          fi

      - name: Verify database env
        run: |
          if [ -z "${{ secrets.DATABASE_URL }}" ] && [ -z "${{ vars.DATABASE_URL }}" ]; then
            echo "ERROR: DATABASE_URL is not configured (neither in Secrets nor in Variables)." >&2
            echo "Add it under Settings > Secrets and variables > Actions (repo secrets or variables)." >&2
            echo "If you set Environment-level variables, make sure this job targets that environment." >&2
            exit 1
          fi

      - name: Install dependencies
        run: npm ci

      - name: DB connectivity check
        run: |
          node scripts/checkDb.mjs | tee db-check.json
        env:
          # ensure Prisma can read DB envs
          DATABASE_URL: ${{ env.DATABASE_URL }}
          DATABASE_URL_UNPOOLED: ${{ env.DATABASE_URL_UNPOOLED }}

      - name: Upload DB check
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: db-check
          path: db-check.json

      - name: Build app
        run: npm run build

      - name: Start server
        run: |
          nohup npm run start > .next-start.log 2>&1 &

      - name: Wait for server
        run: npx --yes wait-on http://localhost:3000 --timeout 60000

      - name: Check API health
        run: |
          curl -sSf http://localhost:3000/api/admin/persistence/health | tee health.json

      - name: Run smoke tests
        run: npx vitest run tests/db_persistence.smoke.spec.ts --reporter=dot
        env:
          BASE_URL: http://localhost:3000
          NEXT_TELEMETRY_DISABLED: 1

      - name: Run attendant codes login smoke
        run: npx vitest run tests/attendant_codes_assignment_and_login.smoke.spec.ts --reporter=dot --passWithNoTests
        env:
          BASE_URL: http://localhost:3000
          NEXT_TELEMETRY_DISABLED: 1

      - name: Run dynamic staff login smoke
        run: npx vitest run tests/attendant_staff_login.smoke.spec.ts --reporter=dot --passWithNoTests
        env:
          BASE_URL: http://localhost:3000
          NEXT_TELEMETRY_DISABLED: 1

      - name: Run WA all-staff dry-run smoke
        run: npx vitest run tests/wa_all_staff.smoke.spec.ts --reporter=dot --passWithNoTests
        env:
          BASE_URL: http://localhost:3000
          NEXT_TELEMETRY_DISABLED: 1
          WA_DRY_RUN: true

      - name: Show last 200 lines of server log
        if: always()
        run: |
          echo "--- .next-start.log (tail) ---"
          tail -n 200 .next-start.log || true

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: smoke-logs
          path: |
            .next-start.log
            health.json
